apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "common.fullname" . }}
  labels:
    app: {{ template "common.name" . }}
    chart: {{ template "common.chart.name" . }}
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
      app: {{ template "common.name" . }}
  replicas: {{ .Values.deploymentReplicas }}
  template:
    metadata:
      labels:
        app: {{ template "common.name" . }}
        release: "{{ .Release.Name }}"
    spec:
      {{- if .Values.hostAliasesEnabled }}
      hostAliases:
      {{- range $i,$map :=  .Values.hostAliasesList }}
      - ip: {{ $map.ip }}
        hostnames: 
        {{- range  $map.hostnames }}
        - "{{ . }}"
        {{- end }}
      {{- end }}
      {{- end }}
      {{- if .Values.initContainersEnabled }}
      initContainers:
      - name: "wait-service-run"
        image: "{{ .Values.global.imageRepositoryName }}/{{ .Values.initContainersImage }}"
        imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
        command: ["sh", "-c", "{{ .Values.initContainersCommand }}"]
      {{- end }}
      {{- if .Values.initInstallContainersEnabled }}
      initContainers:
{{ include "init-install-shell" . | indent 6 }}
      {{- end }}
      containers:
      - name: {{ template "common.containers.name" . }}
        {{- if .Values.imageTag }}
        image: "{{ .Values.global.imageRepositoryName }}/{{ .Values.imageRepository }}:{{ .Values.imageTag }}"
        {{- else }}
        image: "{{ .Values.global.imageRepositoryName }}/{{ .Values.imageRepository }}:{{.Chart.AppVersion}}"
        {{- end }}
        imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
        {{- if .Values.containersCommand }}
        command: 
        - sh
        - -xc
        - |
{{ .Values.containersCommand | indent 10 }}
        {{- end }}
        {{- if .Values.containersArgs }}
        args: {{ .Values.containersArgs}}
        {{- end }}
        {{- if .Values.securityContext }}
        securityContext:
          privileged: {{ .Values.securityContext }}
        {{- end }}
        env:
        {{- range $key, $value := .Values.env }}
        - name: "{{ $key }}"
          value: "{{ $value }}"
        {{- end }}
        {{- range $i,$map :=  .Values.listenv }}     
        - name: "{{ $map.name }}"
          value: "{{ $map.value }}"
        {{- end }}
        {{- if .Values.envcommon }}
        - name: "{{ .Values.envcommon }}"
          value: "{{ .Values.serviceName }}.{{ .Release.Namespace }}"
        {{- end }}
        {{- if .Values.envsecretEnabled }}
        {{- range $i,$map :=  .Values.envsecretData }}
        - name: "{{ $map.envname }}"
          valueFrom:
            secretKeyRef:
              name: {{ $.Values.serviceName }}-envsecret
              key: "{{ $map.key }}"
        {{- end }}
        {{- end }}
        resources:
          requests:
            cpu: {{ .Values.resourcesRequestsCpu }}
            memory: {{ .Values.resourcesRequestsMemory }}
          limits:
            cpu: {{ .Values.resourcesLimitsCpu }}
            memory: {{ .Values.resourcesLimitsMemory }}
        ports:         
        {{- range $i,$map :=  .Values.deploymentPorts }}
        - name: containerport-{{ $i }}
          {{- if $map.protocol }}
          protocol: "{{ $map.protocol }}"
          {{- else }}
          protocol: "TCP"
          {{- end }}
          containerPort: {{ $map.containerPort }}
        {{- end }}
         {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          exec:
            command: ["sh", "-c", "{{ .Values.livenessProbe.command }}"]
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          exec:
            command: ["sh", "-c", "{{ .Values.readinessProbe.command }}"]
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.persistenceEnabled }}
        volumeMounts:

        {{- range $i,$map :=  .Values.volumeMounts }}
        - name: {{ $map.name }}
          mountPath: {{ $map.mountPath | quote }}
          {{- if $map.subPath }}
          subPath: {{ $map.subPath }}
          {{- end }}
	  {{- if $map.readOnly }}
          readOnly: {{ $map.readOnly }}
          {{- end }}

        {{- end }}

        {{- end }}
      {{- if .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- end }}  
      {{- if .Values.persistenceEnabled }}
      volumes:
      {{- range $i,$map :=  .Values.volume }}

       {{- if eq  "configMap" ($map.type) }}
       - name: {{ $map.name }}
         configMap:
           name: {{ $.Values.serviceName }}-{{ $map.name }}
           {{- if $map.items }}
           items:
           {{- range $j,$item :=  $map.items }}
           - key: {{ $item.key }}
             path: {{ $item.path }}
             mode: {{ $item.mode }}
           {{- end }}
           {{- end }}
       {{- else if or (eq  "gluster" ($map.type)) (eq  "no-create-pvc" ($map.type)) }}
       - name: {{ $map.name }}
         persistentVolumeClaim:
           claimName: {{ $.Values.serviceName }}-{{ $map.name }}
       {{- else if eq  "secret" ($map.type) }}
       - name: {{ $map.name }}
         secret:
           secretName: {{ $.Values.serviceName }}-{{ $map.name }}
       {{- end }}
      {{- end }}

      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
